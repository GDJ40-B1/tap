<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btf.tap.mapper.RoomReviewMapper">
	<resultMap type="com.btf.tap.vo.RoomReview" id="resultRoomReview">
		<id column="room_review_id" property="roomReviewId"/>
		<result column="payment_id" property="paymentId"/>
		<result column="answer_status" property="answerStatus"/>
		<result column="room_review_content" property="roomReviewContent"/>
		<result column="room_review_score" property="roomReviewScore"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<collection property="roomReviewComment" ofType="com.btf.tap.vo.RoomReviewComment">
			<id column="room_review_id" property="roomReviewId"/>
			<result column="room_review_comment_content" property="roomReviewCommentContent"/>
			<result column="comment_create_date" property="commentCreateDate"/>
		</collection>
		<collection property="room" ofType="com.btf.tap.vo.Room">
			<id column="room_id" property="roomId"/>
			<result column="room_category" property="roomCategory"/>
			<result column="room_form" property="roomForm"/>
			<result column="room_name" property="roomName"/>
		</collection>
		<collection property="reservation" ofType="com.btf.tap.vo.Reservation">
			<id column="reservation_id" property="reservationId"/>
			<result column="member_id" property="memberId"/>
		</collection>
	</resultMap>
 
	<!-- 해당숙소의 전체 후기 조회하기 -->
	<select id="selectRoomReviewList" parameterType="java.util.Map" resultMap="resultRoomReview">
		SELECT
			 rr.room_review_id,
			 rr.payment_id,
			 rr.answer_status,
			 rr.room_review_content,
			 rr.room_review_score,
			 rr.create_date,
			 rr.update_date,
			 rrc.room_review_id,
			 rrc.room_review_comment_content,
			 rrc.comment_create_date,
			 rs.member_id,
			 r.room_category,
			 r.room_form
		FROM room_review rr
			 LEFT JOIN payment p ON rr.payment_id = p.payment_id
			 LEFT JOIN reservation rs ON p.reservation_id = rs.reservation_id
			 LEFT JOIN room r ON rs.room_id = r.room_id 
			 LEFT JOIN room_review_comment rrc ON rr.room_review_id = rrc.room_review_id
		WHERE
			 r.room_id = #{roomId}	
		ORDER BY rr.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}	
	</select>
	
	<!-- 해당 숙소의 전체 후기 수 -->
	<select id="totalRoomReivewCount" parameterType="int" resultType="int">
		SELECT
			 COUNT(rr.room_review_id)
		FROM room_review rr 
			 INNER JOIN payment p ON rr.payment_id = p.payment_id
			 INNER JOIN reservation rs ON p.reservation_id = rs.reservation_id
			 INNER JOIN room r ON rs.room_id = r.room_id
		WHERE
			 r.room_id = #{roomId}	 	
	</select>
	
	<!-- 숙소후기 작성하기 -->
	<insert id="insertRoomReview" parameterType="com.btf.tap.vo.RoomReview">
		INSERT INTO room_review(
			payment_id,
			answer_status,
			room_review_content,
			room_review_score,
			create_date,
			update_date
		) VALUES (
			#{paymentId},
			#{answerStatus},
			#{roomReviewContent},
			#{roomReviewScore},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 숙소후기 삭제하기 -->
	<delete id="deleteRoomReview" parameterType="int">
		DELETE
		FROM 
			room_review
		WHERE 
			room_review_id = #{roomReviewId}
	</delete>
	
	<!-- 숙소별 평점 총합 -->
	<select id="totalRoomReviewScore" parameterType="int" resultType="double">
			SELECT IFNULL(SUM(rr.room_review_score), 0)
			FROM room_review rr
				INNER JOIN payment p ON rr.payment_id = p.payment_id
				INNER JOIN reservation rs ON p.reservation_id = rs.reservation_id
				INNER JOIN room r ON rs.room_id = r.room_id
			WHERE
				r.room_id = #{roomId}		 
	</select>
	
	<!-- 특정 숙소의 숙소 후기 전부 삭제 -->
	<delete id="deleteRoomAllReview" parameterType="int">
		DELETE FROM room_review WHERE payment_id IN (
			SELECT * FROM (
				SELECT rr.payment_id FROM room_review rr
				INNER JOIN payment p ON rr.payment_id=p.payment_id
				INNER JOIN reservation rs ON p.reservation_id=rs.reservation_id
				INNER JOIN room r ON rs.room_id=r.room_id WHERE r.room_id=#{roomId}
			) roomReview
		)
	</delete>
	
	<!-- ******** 숙소후기 답변 ******** -->
	<!-- 숙소후기 답변 작성하기 -->
	<insert id="insertRoomReviewComment" parameterType="com.btf.tap.vo.RoomReviewComment">
		INSERT INTO room_review_comment(
			room_review_id,
			room_review_comment_content,
			comment_create_date
		) VALUES(
			#{roomReviewId},
			#{roomReviewCommentContent},
			NOW()
		) 
	</insert>
	
	<!-- 숙소후기 답변 삭제하기 -->
	<delete id="deleteRoomReviewComment" parameterType="int">
		DELETE 
		FROM 
			room_review_comment
		WHERE
			room_review_id = #{roomReviewId}	
	</delete>
	
	<!-- ******** 특정 회원의 숙소후기 ******** -->
	<!-- 전체 숙소후기 목록 조회하기 -->
	<select id="selectMemberRoomReviewList" parameterType="java.util.Map" resultMap="resultRoomReview">
		SELECT
			 rr.room_review_id,
			 rr.payment_id,
			 rr.answer_status,
			 rr.room_review_content,
			 rr.room_review_score,
			 rr.create_date,
			 rr.update_date,
			 rrc.room_review_id,
			 rrc.room_review_comment_content,
			 rrc.comment_create_date,
			 r.room_form,
			 r.room_name,
			 r.room_category
		FROM room_review rr
			 LEFT JOIN payment p ON rr.payment_id = p.payment_id
			 LEFT JOIN reservation rs ON p.reservation_id = rs.reservation_id
			 LEFT JOIN room r ON rs.room_id = r.room_id 
			 LEFT JOIN room_review_comment rrc ON rr.room_review_id = rrc.room_review_id
		WHERE
			 rs.member_id = #{memberId}
		ORDER BY rr.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 전체 숙소후기 개수 -->
	<select id="memberTotalRoomReviewCount" parameterType="String" resultType="int">
		SELECT 
			 COUNT(*) 
		FROM 
			 room_review rr
			 INNER JOIN payment p ON rr.payment_id = p.payment_id
			 INNER JOIN reservation rs ON p.reservation_id = rs.reservation_id
			 INNER JOIN room r ON rs.room_id = r.room_id 
		WHERE
			 rs.member_id = #{memberId}
	</select>
	
	<!-- *** 호스트 숙소후기 미답변 관련 부분 *** -->
	<!-- 미답변 숙소후기 목록 조회하기 -->
	<select id="unansweredRoomReviewList" parameterType="java.util.Map" resultType="Map">
		SELECT
			rr.room_review_id roomReviewId,
			rr.room_review_content roomReviewContent,
			rr.room_review_score roomReviewScore,
			rr.create_date createDate,
			rs.member_id memberId,
			r.room_id roomId,
			r.detail_address_id detailAddressId,
			r.room_name roomName
		FROM room_review rr
				INNER JOIN payment p ON rr.payment_id = p.payment_id
				INNER JOIN reservation rs ON p.reservation_id = rs.reservation_id
				INNER JOIN room r ON rs.room_id = r.room_id  
		WHERE
			r.host_id = #{hostId} AND rr.answer_status = 'N'
		ORDER BY rr.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 미답변 숙소 후기 개수 -->
	<select id="totalUnansweredRoomReviewCount" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM room_review rr
			INNER JOIN payment p ON rr.payment_id = p.payment_id
			INNER JOIN reservation rs ON p.reservation_id = rs.reservation_id
			INNER JOIN room r ON rs.room_id = r.room_id 
		WHERE
			r.host_id = #{hostId} AND rr.answer_status = 'N'
	</select>
</mapper>